{"version":3,"sources":["../../src/components/Editor.jsx"],"names":["Preview","markdown","gfm","defaultToolbarCommands","Editor","props","type","value","options","React","useState","selectedTab","setSelectedTab","editedValue","setEditedValue","debouncedValue","useEffect","onChange","PatchEvent","from","saveImage","data","client","sanityClient","withConfig","apiVersion","success","result","assets","upload","then","doc","url","catch","markers","presence","title","description","level","Promise","resolve","writeButton","tabIndex"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport ReactMde from 'react-mde'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\n\nimport PatchEvent, {set, unset} from 'part:@sanity/form-builder/patch-event'\nimport sanityClient from 'part:@sanity/base/client'\n\nimport Fieldset from 'part:@sanity/components/fieldsets/default'\n\nimport useDebounce from '../hooks/useDebounce'\n\nimport 'react-mde/lib/styles/css/react-mde-all.css?raw'\n\nconst Preview = ({markdown}) => {\n  return <ReactMarkdown plugins={[gfm]}>{markdown}</ReactMarkdown>\n}\n\nconst defaultToolbarCommands = [\n  ['header', 'bold', 'italic', 'strikethrough'],\n  ['link', 'quote', 'code'],\n  ['unordered-list', 'ordered-list', 'checked-list'],\n]\n\nexport default function Editor(props) {\n  const {type, value} = props\n  const {options = {}} = type\n  const [selectedTab, setSelectedTab] = React.useState('write')\n  const [editedValue, setEditedValue] = React.useState(value)\n  const debouncedValue = useDebounce(editedValue, 100)\n  \n  React.useEffect(() => {\n    setEditedValue(value)\n  }, [value])\n\n  React.useEffect(() => {\n    if (!debouncedValue || debouncedValue === \"\") {\n      props.onChange(PatchEvent.from([unset()]))\n    } else if (debouncedValue !== value) {\n      props.onChange(PatchEvent.from([set(debouncedValue)]))\n    }\n  }, [debouncedValue])\n\n  const saveImage = async function* (data) {\n    const client = sanityClient.withConfig({apiVersion: '2021-03-25'})\n\n    let success = true\n    const result = await client.assets\n      .upload('image', data)\n      .then((doc) => `${doc.url}?w=450`)\n      .catch(() => {\n        success = false\n        return `Error: Could not upload file. Only images are supported.`\n      })\n\n    yield result\n    return success\n  }\n\n  return (\n    <Fieldset\n      markers={props.markers}\n      presence={props.presence}\n      legend={props.type.title}\n      description={props.type.description}\n      level={props.level}\n    >\n      <div className=\"container\">\n        <ReactMde\n          toolbarCommands={options['toolbar'] || defaultToolbarCommands}\n          value={editedValue}\n          onChange={setEditedValue}\n          selectedTab={selectedTab}\n          onTabChange={setSelectedTab}\n          generateMarkdownPreview={(markdown) => Promise.resolve(<Preview markdown={markdown} />)}\n          childProps={{\n            writeButton: {\n              tabIndex: -1,\n            },\n          }}\n          paste={{saveImage}}\n        />\n      </div>\n    </Fieldset>\n  )\n}\n"],"file":"Editor.js"}